// hide console messages
npp_console local -
npe_console local v+ m-
npp_console local +

// save current assembly
npp_save

// set local paths to local variables
set local project = C:\E80
set local asm = "$(FULL_CURRENT_PATH)"
set local vhd = "$(project)\VHDL\Firmware.vhd"
set local assembler = "$(project)\Assembler\e80asm.exe"

// change directory (and drive) to the E80ASM location
cd "$(project)\Assembler"
// run and show the assembler command line
set local commandline = $(assembler) /Q < $(asm) > $(vhd)
echo $(commandline)
cmd /c " $(commandline)"

if $(EXITCODE) == 0 then
	// assembly successful, run GHDL/GTKwave
	cd "$(project)\GHDL"
	set local commandline = "computer_tb.bat"
	echo $(commandline)
	cmd /c " $(commandline)"
else
	// assembly error
	// find the word line before the number (format being "line ⟨number⟩ :")
	set local line_start ~ strfind "$(OUTPUT)" "line"
	if $(line_start) > 0 then // the error message contains a line
		// mark the start of the number after the word "line "
		set local line_start ~ $(line_start) + 5
		// find the colon marking the end of the line number
		set local line_end ~ strfind "$(OUTPUT)" ":"
		// calculate the length of the line number (# of digits)
		set local line_len ~ $(line_end) - $(line_start)
		// get the line number from the start to the length
		set local line_num ~ substr $(line_start) $(line_len) "$(OUTPUT)"
		// subtract one because Notepad++/Scintilla starts from 0
		set local line_num ~ $(line_num) - 1
		// move the active line to the erroneous line
		sci_sendmsg SCI_GOTOLINE $(line_num)
	endif
endif